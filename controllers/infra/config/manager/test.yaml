apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: controller-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: infras.infra.sealos.io
spec:
  group: infra.sealos.io
  names:
    kind: Infra
    listKind: InfraList
    plural: infras
    singular: infra
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Infra is the Schema for the infras API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: InfraSpec defines the desired state of Infra
              properties:
                availabilityZone:
                  description: Availability Zone
                  type: string
                hosts:
                  items:
                    properties:
                      arch:
                        description: 'ENUM: amd64/arm64 (NOTE: the default value is amd64)'
                        type: string
                      count:
                        type: integer
                      disks:
                        items:
                          properties:
                            capacity:
                              type: integer
                            id:
                              items:
                                type: string
                              type: array
                            name:
                              description: Device name
                              type: string
                            type:
                              description: 'ENUM: system/data'
                              type: string
                          type: object
                        type: array
                      flavor:
                        description: ecs.t5-lc1m2.large
                        type: string
                      image:
                        description: 'ENUM: ubuntu:20.04, centos:7.2 and so on.'
                        type: string
                      index:
                        description: Find the mapping between expected hosts and actual hosts
                        type: integer
                      metadata:
                        items:
                          properties:
                            diskId:
                              items:
                                type: string
                              type: array
                            id:
                              type: string
                            ips:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      resources:
                        additionalProperties:
                          anyOf:
                            - type: integer
                            - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'key values resources. cpu: 2 memory: 4 other resources like GPU'
                        type: object
                      roles:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                regionIDs:
                  description: RegionIDs is cloud provider regionID list
                  items:
                    type: string
                  type: array
                ssh:
                  properties:
                    passwd:
                      type: string
                    pk:
                      type: string
                    pkPasswd:
                      type: string
                    pkname:
                      type: string
                    port:
                      type: integer
                    user:
                      type: string
                  type: object
                zoneIDs:
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: InfraStatus defines the observed state of Infra
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-controller-manager
  namespace: controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: controller-leader-election-role
  namespace: controller-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: controller-manager-role
rules:
  - apiGroups:
      - infra.sealos.io
    resources:
      - infras
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - infra.sealos.io
    resources:
      - infras/finalizers
    verbs:
      - update
  - apiGroups:
      - infra.sealos.io
    resources:
      - infras/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controller-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: controller-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controller-leader-election-rolebinding
  namespace: controller-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controller-leader-election-role
subjects:
  - kind: ServiceAccount
    name: controller-controller-manager
    namespace: controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controller-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: controller-controller-manager
    namespace: controller-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: controller-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: controller-proxy-role
subjects:
  - kind: ServiceAccount
    name: controller-controller-manager
    namespace: controller-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    # Copyright Â© 2022 sealos.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a63686c3.sealos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: controller-manager-config
  namespace: controller-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: controller-controller-manager-metrics-service
  namespace: controller-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: controller-controller-manager
  namespace: controller-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
          command:
            - /manager
          image: docker.io/xiaojie99999/infra:v0.0.1
          env:
          - name: AWS_ACCESS_KEY_ID
            value: xxx
          - name: AWS_SECRET_ACCESS_KEY
            value: xxx
          - name: AWS_DEFAULT_REGION
            value: xxx
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: controller-controller-manager
      terminationGracePeriodSeconds: 10